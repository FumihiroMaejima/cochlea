openapi: 3.0.3
info:
  description: "Test 12345 You can find out more about     Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api
    key `special-key` to test the authorization     filters."
  version: 1.0.0
  title: Test My Service
  termsOfService: https://github.com/user-name/repository-name
  contact:
    email: test@example.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: admins
    description: Administrators information
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: banners
    description: Banners information
  - name: coins
    description: Coins information
  - name: events
    description: Events information
  - name: informations
    description: Informations information
  - name: roles
    description: Roles information
  - name: gameEnemies
    description: GameEnemies information
  - name: auth
    description: Operations about authentication
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: users
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
paths:
  /admin/admins:
    $ref: "./data/paths/admin/admins/index.yaml"
  /admin/admins/csv:
    $ref: "./data/paths/admin/admins/csv.yaml"
  /admin/admins/admin:
    $ref: "./data/paths/admin/admins/admin/index.yaml"
  "/admin/admins/admin/{id}":
    parameters:
      - name: id
        in: path
        description: ID of admin
        required: true
        schema:
          type: integer
          format: int64
    $ref: "./data/paths/admin/admins/admin/id.yaml"
  /admin/roles:
    $ref: "./data/paths/admin/roles/index.yaml"
  /admin/roles/list:
    $ref: "./data/paths/admin/roles/list.yaml"
  /admin/roles/csv:
    $ref: "./data/paths/admin/roles/csv.yaml"
  /admin/roles/role:
    $ref: "./data/paths/admin/roles/role/index.yaml"
  "/admin/roles/role/{id}":
    parameters:
      - name: id
        in: path
        description: ID of role
        required: true
        schema:
          type: integer
          format: int64
    $ref: "./data/paths/admin/roles/role/id.yaml"
  /admin/banners:
    $ref: "./data/paths/admin/banners/index.yaml"
  /admin/banners/csv:
    $ref: "./data/paths/admin/banners/csv.yaml"
  /admin/banners/template:
    $ref: "./data/paths/admin/banners/template.yaml"
  /admin/banners/banner:
    $ref: "./data/paths/admin/banners/banner/index.yaml"
  "/admin/banners/banner/{uuid}":
    parameters:
      - name: uuid
        in: path
        description: UUID of banner
        required: true
        schema:
          type: string
    $ref: "./data/paths/admin/banners/banner/uuid.yaml"
  /admin/coins:
    $ref: "./data/paths/admin/coins/index.yaml"
  /admin/coins/csv:
    $ref: "./data/paths/admin/coins/csv.yaml"
  /admin/coins/template:
    $ref: "./data/paths/admin/coins/template.yaml"
  /admin/coins/coin:
    $ref: "./data/paths/admin/coins/coin/index.yaml"
  "/admin/coins/coin/{id}":
    parameters:
      - name: id
        in: path
        description: ID of coin
        required: true
        schema:
          type: integer
          format: int64
    $ref: "./data/paths/admin/coins/coin/id.yaml"
  /admin/events:
    $ref: "./data/paths/admin/events/index.yaml"
  /admin/events/csv:
    $ref: "./data/paths/admin/events/csv.yaml"
  /admin/events/template:
    $ref: "./data/paths/admin/events/template.yaml"
  /admin/events/event:
    $ref: "./data/paths/admin/events/event/index.yaml"
  "/admin/events/event/{id}":
    parameters:
      - name: id
        in: path
        description: ID of event
        required: true
        schema:
          type: integer
          format: int64
    $ref: "./data/paths/admin/events/event/id.yaml"
  /admin/informations:
    $ref: "./data/paths/admin/informations/index.yaml"
  /admin/informations/csv:
    $ref: "./data/paths/admin/informations/csv.yaml"
  /admin/informations/template:
    $ref: "./data/paths/admin/informations/template.yaml"
  /admin/informations/information:
    $ref: "./data/paths/admin/informations/information/index.yaml"
  "/admin/informations/information/{id}":
    parameters:
      - name: id
        in: path
        description: ID of information
        required: true
        schema:
          type: integer
          format: int64
    $ref: "./data/paths/admin/informations/information/id.yaml"
#   /admin/game/enemies:
#     $ref: "./data/paths/admin/game/enemies/index.yaml"
#   /admin/game/enemies/file/csv:
#     $ref: "./data/paths/admin/game/enemies/file/csv.yaml"
#   /admin/game/enemies/file/template:
#     $ref: "./data/paths/admin/game/enemies/file/template.yaml"
#   "/admin/game/enemies/enemy/{id}":
#     parameters:
#       - name: id
#         in: path
#         description: ID of role
#         required: true
#         schema:
#           type: integer
#           format: int64
#     $ref: "./data/paths/admin/game/enemies/enemy/id.yaml"
#   /admin/game/enemies/enemy:
#     $ref: "./data/paths/admin/game/enemies/enemy/index.yaml"
  /admin/auth/login:
    $ref: "./data/paths/admin/auth/login.yaml"
  /admin/auth/logout:
    $ref: "./data/paths/admin/auth/logout.yaml"
  /admin/auth/refresh:
    $ref: "./data/paths/admin/auth/refresh.yaml"
  /admin/auth/self:
    $ref: "./data/paths/admin/auth/self.yaml"
  /user/banners:
    $ref: "./data/paths/user/banners/index.yaml"
  /user/coins:
    $ref: "./data/paths/user/coins/index.yaml"
  /user/events:
    $ref: "./data/paths/user/events/index.yaml"
  /user/informations:
    $ref: "./data/paths/user/informations/index.yaml"
  "/user/informations/information/{id}/alreadyRead":
    parameters:
      - name: id
        in: path
        description: ID of information
        required: true
        schema:
          type: integer
          format: int64
    $ref: "./data/paths/user/informations/information/alreadyRead.yaml"
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  # - url: https://localhost:3200/api/v1
  - url: http://localhost:3200/api/v1
    description: description.
components:
  requestBodies:
    createRoleWithForm:
      $ref: "./data/components/requestBodies/createRoleWithForm.yaml"
  securitySchemes:
    # admins_auth:
    #   $ref: "./data/components/securitySchemes/adminsAuth.yaml"
    authenticaion_key:
      $ref: "./data/components/securitySchemes/authenticaionKey.yaml"
    authority_key:
      $ref: "./data/components/securitySchemes/authorityKey.yaml"
    auth_id:
      $ref: "./data/components/securitySchemes/authId.yaml"
  schemas:
    AuthRequestResponse:
      $ref: "./data/schemas/auth/AuthRequestResponse.yaml"
    AuthenticatedUser:
      $ref: "./data/schemas/auth/AuthenticatedUser.yaml"
    Admins:
      $ref: "./data/schemas/models/Admins.yaml"
    Coins:
      $ref: "./data/schemas/models/Coins.yaml"
    Events:
      $ref: "./data/schemas/models/Events.yaml"
    Informations:
      $ref: "./data/schemas/models/Informations.yaml"
    Permissions:
      $ref: "./data/schemas/models/Permissions.yaml"
    Roles:
      $ref: "./data/schemas/models/Roles.yaml"
    RolesList:
      $ref: "./data/schemas/models/RolesList.yaml"
    GameEnemies:
      $ref: "./data/schemas/models/GameEnemies.yaml"
    FileData:
      $ref: "./data/schemas/files/FileData.yaml"
    ApiSuccessResponse:
      $ref: "./data/schemas/request/ApiSuccessResponse.yaml"
    ApiErrorResponse:
      $ref: "./data/schemas/request/ApiErrorResponse.yaml"
    ApiResponse:
      $ref: "./data/schemas/request/ApiResponse.yaml"
